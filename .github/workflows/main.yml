# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push but only for the test_build branch
  push:
    tags:
      - '**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      # Checks-out repository under $GITHUB_WORKSPACE
      - name: Checkout repository and submodules
        uses: actions/checkout@v2
        with:
          submodules: recursive

    # Install dependencies
      - name: Install dependencies
        run: sudo apt update && sudo apt install libsqlite3-dev libzip-dev qtbase5-dev libqt5svg5-dev libqt5texttospeech5-dev libproj-dev mesa-common-dev libglu1-mesa-dev patchelf
      
      - name: setEnv
        run: export MAKEFLAGS=-j$(nproc)
      
      - name: make deb
        run: $GITHUB_WORKSPACE/build_deb.sh ${{ github.ref }}
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body_path: ${{ github.workspace }}/misc/release_body.md
          draft: false
          prerelease: false
              
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ${{ github.workspace }}/misc/debian/pprzgcs.deb
          asset_name: pprzgcs_${{ github.ref }}.deb
          asset_content_type: application/vnd.debian.binary-package
        
